- states.each do |state, details|
  - councils = councils_by_state[state]
  main.container
    section.content-section
      .section-header
        h2
          i.fa-solid.fa-map-marked-alt
          |  Extra #{state} Councils
        p.subtitle
          ' Extra councils we don't or didn't have scrapers for, sourced from
          a href="#{details['url']}"
            = details['name']
        p
          ' Note
          ul
            li
              ' population is an Estimate from an AI - take it with a pinch or a kg of salt as needed ;)
              ' [Below 1K is listed as 0]
            li Some of these may be covered by other data sources
            li
              ' The top 10% most populated councils (>= #{significant_population_k} K) are in
              b bold
            li
              ' As scrapers are added and deployed for these councils they will show up in the "Authority"
              ' column assuming the name is identical

      .table-container
        table.sortable.sticky-header.data-table
          thead
            tr
              th Name
              th.right Pop K
              th Matching Issues
              th Authority
          tbody
            - councils.each do |council|
              tr
                td
                  a href="#{council.url}" title="View Council Site" target="_blank"
                    = council.name
                td.right
                  - if council.population_k.zero?
                    ' 0
                  - elsif council.population_k < significant_population_k
                    => number_with_delimiter council.population_k
                  - else
                    b
                      => number_with_delimiter council.population_k
                td
                  - council.issues.each do |issue|
                    a href="#{path_for issue}" title="View GitHub Issue: #{issue.title}" target="_blank"
                      i.fa-regular.fa-circle-dot
                      '
                      => issue.title
                      ' #
                      = issue.number
                td
                  - if council.authority
                    a href=path_for(council.authority)
                      = council.authority.name
                    '
                    = authority.delisted_on&.strftime('[Delisted %b %Y]')

        .section-footer
          p Total: #{councils.size} councils, Est pop #{number_with_delimiter councils.map(&:population_k).sum} K

